@{
    Layout = null;
}

<div id="app"
     style="display: none">
    <form autocomplete="off"
          class="text-center"
          v-on:submit.prevent="Submit()">
        <label>{{vm.Dto.MeasureValue}}</label>
        <br>
        <custom-input v-model:value="vm.Dto.MeasureValue"></custom-input>
        <input type="submit"
               value="Submit" />
    </form>
</div>

<script src="/lib/jquery/jquery-1.12.4.js"
            asp-append-version="true"></script>

<partial name="_CustomRequest"/>

<script src="/lib/vue/vue.global.prod.js"></script>
<script>
  const { createApp, ref, reactive, onMounted, computed } = Vue;

  const app = createApp({
    setup(){

      const submitUrl = '@(Url.Action("Post"))';

      const vm = reactive({
            Dto : {
                MeasureValue : '1.0',
            }
      });

       const customRequest = {};
       customRequest.Url = submitUrl;
       customRequest.RequestBody = vm;
       customRequest.SuccessCallback = function(e)
       {
           console.log(e);

           vm.Dto = e.Dto;
       };
       customRequest.Request = new CustomRequest(customRequest);

      const Submit = function()
      {
          customRequest.Request.PostJson();
      }

      return {
        vm,
        Submit
      }
    }
  });

  app.component("custom-input", {
    props: {
      value: String,
    },
    setup(props, { emit }){

      onMounted(() => {

      });

      const displayvalue = computed({
        get : () => {

          console.log('get');

          return props.value;
        },
        set : (v) => {

          console.log('set:' + v);

          emit('update:value', v);
        },
      });

      return {
        displayvalue,
      }
    },
    template: `
<input type="number" v-model="displayvalue" />
`,
  });

  const vm = app.mount('#app');

  window.addEventListener('DOMContentLoaded', (event) => {
    document.getElementById("app").style.display = "block";
  });

</script>
